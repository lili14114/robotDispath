*** Settings ***
Library           Selenium2Library
Resource          public_func.txt
Library           RequestsLibrary
Library           CustomLibrary
Library           Collections
Resource          Resource.txt

*** Variables ***
&{resourceInfo}    organname=enler
&{menuDict}       operative_monitor=xpath=//a[@href='#menuMark181']    diagram_disapth=css=li[data-mark='menuMark214']    busrecordPage=css=li[data-mark='menuMark228']    # operative_monitor#运营监控，diagram_disapth #简图调度

*** Keywords ***
able_plugIn
    [Arguments]    ${arg}    # arg=启用 或 arg=禁用 实现插件的启用和禁用
    wait click    xpath=//span[contains(text(),"资源管理")]
    wait click    xpath=//li[@data-title="自定义插件配置"]/a
    wait input    id=jarnameID    司机打卡后车辆状态默认    #检索条件输入功能名称
    wait input    id=plugVersionID    20201216
    wait click    id=search    #查询
    wait element    xpath=//span[@data-role="total-record"]
    wait click    xpath=//tr[@data-index="0"]/td/div    #勾选插件
    wait click    xpath=//span[contains(text(),"${arg}")]    #启用插件
    wait click    xpath=//button[@data-role="confirmBtn"]    #确认
    wait contains    ${arg}
    [Teardown]    Login_indexPage    ${ip}

goToSite
    [Arguments]    ${result}
    ${bustidXPATH}    Catenate    SEPARATOR=    css=div[id='    ${bus_1}[bustid]    ']>div[class='bus-body']
    #第一次进总站
    get bsBusdiagrameMenus_first    ${bustidXPATH}    #点击车辆弹出更多菜单
    wait click    &{dropdown_menuDict}[goToSite]    #点击快速补录按钮
    wait click    xpath=//button[@id='save']    #对车辆手动“进站”保存
    sleep    2
    wait contains    待执行
    #出总站
    wait BsBusdiagrameViceIframe    #回到副frame，获取更多弹窗
    wait Rightclick    ${bustidXPATH}
    wait BsBusdiagrameIframe    #选择简图主frame
    wait click    &{dropdown_menuDict}[outSite]    #点击快速补录按钮
    wait click    xpath=//button[@id='save']    #对车辆手动“进站”保存
    wait contains    运行中
    #再次进总站
    wait BsBusdiagrameViceIframe    #回到副frame，获取更多弹窗
    wait Rightclick    ${bustidXPATH}
    wait BsBusdiagrameIframe    #选择简图主frame
    wait click    &{dropdown_menuDict}[goToSite]    #点击快速补录按钮
    wait click    xpath=//button[@id='save']    #对车辆手动“进站”保存
    #测试完毕后，删掉测试数据 --进入车辆路单页面
    Login_indexPage    ${ip}
    get bsBusdiagrameMenus_first    ${bustidXPATH}    #点击车辆弹出更多菜单
    #wait element    &{dropdown_menuDict}[busReport]
    ${elementxpath}    get webelements    &{dropdown_menuDict}[busReport]
    wait click    ${elementxpath}[-1]    #点击车辆“路单”，进入路单页面
    #-删除数据，并返回主页
    wait contains    已完成
    wait contains    ${result}
    wait click    xpath=//div[@class="modal-body"]/div/div[2]/div/table/tbody/tr/td/div[2]/div/table/tbody/tr/th/div    #勾选第全部记录
    wait click    xpath=//span[contains(text(),"删除")]    #点击删除按钮
    wait click    xpath=//button[contains(text(),"确定")]    #点击确认删除按钮
    wait contains    没有数据
    #车辆位置回到停车场
    create webservice    ${ip}
    ${dispathJson}    Get Dispath Json    ${bus_1}[hostcode]    6
    ${data1}    post request    api    /webservice/rest/dispatch    data=${dispathJson}
    ${result1}    To Json    ${data1.content}
    should contain    ${result1}[error_text]    上报成功
    sleep    3
    ${dispathJson}    Get Dispath Json    ${bus_1}[hostcode]    106
    ${data2}    post request    api    /webservice/rest/dispatch    data=${dispathJson}
    ${result2}    To Json    ${data2.content}

deleteSchedulePscreen
    [Documentation]    删除发车屏数据
    Login_indexPage    ${ip}
    wait click    ${operate_monitorMune}    #【运营监控】
    wait click    ${monitor_TVmenu}    #【调度屏】
    wait click    xpath=//div[@data-role="selectAll"]    #选择全部
    wait click    xpath=//button[contains(text(),"删除")]    #删除
    wait click    xpath=//button[contains(text(),"确定")]
    #确定删除
    [Teardown]    Login_indexPage    ${ip}

searchOrgan
    ${header}    create_webPageLogin    ${ip}    koala    888888
    set to dictionary    ${header}    Content-Type=application/x-www-form-urlencoded;charset=UTF-8
    set to dictionary    ${header}    X-Requested-With=XMLHttpRequest
    create session    api    ${ip}    ${header}
    #查询机构
    ${urlplay}    ${playLoad}    Search BsOrganization    &{resourceInfo}[organname]
    ${data}    post request    api    ${urlplay}    data=${playLoad}    #查询机构
    ${result}    To Json    ${data.content}
    ${organID}    set variable    ${result}[data][0][id]    #返回机构序号
    ${subid}    set variable    ${result}[data][0][organid]    #返回机构ID
    ${belongto}    set variable    ${result}[data][0][belongto]
    [Return]    ${subid}    ${belongto}

searchRole
    ${header}    create_webPageLogin    ${ip}    koala    888888
    set to dictionary    ${header}    Content-Type=application/x-www-form-urlencoded;charset=UTF-8
    set to dictionary    ${header}    X-Requested-With=XMLHttpRequest
    create session    api    ${ip}    ${header}
    #查询角色
    ${search_role_urlPlay}    ${search_role_playLoad}    Search Auth Role PagingQuery    &{resourceInfo}[organname]    &{resourceInfo}[organname]
    ${roleData}    post request    api    ${search_role_urlPlay}    data=${search_role_playLoad}
    #查询角色
    ${role_result}    To Json    ${roleData.content}    #将返回值转成字典形式
    ${roleID}    set variable    ${role_result}[data][0][id]    #返回角色ID
    [Return]    ${roleID}

searchUser
    ${header}    create_webPageLogin    ${ip}    koala    888888
    set to dictionary    ${header}    Content-Type=application/x-www-form-urlencoded;charset=UTF-8
    set to dictionary    ${header}    X-Requested-With=XMLHttpRequest
    create session    api    ${ip}    ${header}
    #查询用户
    ${search_user_urlPlay}    ${search_user_playLoad}    Search Auth User PagingQuery    &{resourceInfo}[organname]
    ${userData}    post request    api    ${search_user_urlPlay}    data=${search_user_playLoad}    #查询用户
    ${user_result}    To Json    ${userData.content}    #将返回值转成字典形式
    ${userID}    set variable    ${user_result}[data][0][id]    #返回角色ID
    [Return]    ${userID}

searchCommandID
    ${header}    create_webPageLogin    ${ip}    koala    888888
    set to dictionary    ${header}    Content-Type=application/x-www-form-urlencoded;charset=UTF-8
    set to dictionary    ${header}    X-Requested-With=XMLHttpRequest
    create session    api    ${ip}    ${header}
    #查询指令
    ${search_command_urlPlay}    ${search_command_playLoad}    Search DhCommanddeploy
    ${commandData}    post request    api    ${search_command_urlPlay}    data=${search_command_playLoad}
    #查询指令
    ${command_result}    To Json    ${commandData.content}    #将返回值转成字典形式
    log    ${command_result}
    ${idLst}    get commandIdLst    ${command_result}    #返回指令ID列表
    [Return]    ${idLst}

searchPage
    ${header}    create_webPageLogin    ${ip}    koala    888888
    set to dictionary    ${header}    Content-Type=application/x-www-form-urlencoded;charset=UTF-8
    set to dictionary    ${header}    X-Requested-With=XMLHttpRequest
    create session    api    ${ip}    ${header}
    #查询机构
    ${urlplay}    ${playLoad}    Search BsOrganization    &{resourceInfo}[organname]
    ${data}    post request    api    ${urlplay}    data=${playLoad}    #查询机构
    ${result}    To Json    ${data.content}
    ${organID}    set variable    ${result}[data][0][id]    #返回机构ID
    #查询角色
    ${search_role_urlPlay}    ${search_role_playLoad}    Search Auth Role PagingQuery    &{resourceInfo}[organname]    &{resourceInfo}[organname]
    ${roleData}    post request    api    ${search_role_urlPlay}    data=${search_role_playLoad}
    #查询角色
    ${role_result}    To Json    ${roleData.content}    #将返回值转成字典形式
    ${roleID}    set variable    ${role_result}[data][0][id]    #返回角色ID
    #查询用户
    ${search_user_urlPlay}    ${search_user_playLoad}    Search Auth User PagingQuery    &{resourceInfo}[organname]
    ${userData}    post request    api    ${search_user_urlPlay}    data=${search_user_playLoad}    #查询用户
    ${user_result}    To Json    ${userData.content}    #将返回值转成字典形式
    ${userID}    set variable    ${user_result}[data][0][id]    #返回角色ID
    #查询指令
    ${search_command_urlPlay}    ${search_command_playLoad}    Search DhCommanddeploy
    ${commandData}    post request    api    ${search_command_urlPlay}    data=${search_command_playLoad}
    #查询指令
    ${command_result}    To Json    ${commandData.content}    #将返回值转成字典形式
    log    ${command_result}
    ${idLst}    get commandIdLst    ${command_result}    #返回指令ID列表
    log    ${idLst}

searchBusinfos
    #${ip}    set variable    http://10.200.9.228:8081
    ${businfoLst}    create list
    ${header}    create_webPageLogin    ${ip}    &{resourceInfo}[organname]    888888
    create session    api    ${ip}    ${header}
    @{internalNoLst}    Create List    robot1    robot2    robot3    robot4    robot5
    FOR    ${internalNo}    IN    @{internalNoLst}
    ${bus_urlPlay}    ${bus_playLoad}    Search Businfo    ${internalNo}
    ${bus_data}    post request    api    ${bus_urlPlay}    data=${bus_playLoad}
    ${bus_result}    To Json    ${bus_data.content}    #将返回值转成字典形式
    log    ${bus_result}
    Append To List    ${businfoLst}    ${bus_result}[data][0]
    END
    log many    ${businfoLst}
    #将结果装入到字典中
    ${bus_1}    create dictionary
    ${bus_2}    create dictionary
    ${bus_3}    create dictionary
    ${bus_4}    create dictionary
    ${bus_5}    create dictionary
    set to dictionary    ${bus_1}    internalno=${businfoLst}[0][internalno]
    set to dictionary    ${bus_1}    bustid=${businfoLst}[0][bustid]
    set to dictionary    ${bus_2}    internalno=${businfoLst}[1][internalno]
    set to dictionary    ${bus_2}    bustid=${businfoLst}[1][bustid]
    set to dictionary    ${bus_3}    internalno=${businfoLst}[2][internalno]
    set to dictionary    ${bus_3}    bustid=${businfoLst}[2][bustid]
    set to dictionary    ${bus_4}    internalno=${businfoLst}[3][internalno]
    set to dictionary    ${bus_4}    bustid=${businfoLst}[3][bustid]
    set to dictionary    ${bus_5}    internalno=${businfoLst}[4][internalno]
    set to dictionary    ${bus_5}    bustid=${businfoLst}[4][bustid]
    [Return]    ${bus_1}    ${bus_2}    ${bus_3}    ${bus_4}    ${bus_5}
